### load packages (install first if the PC doesn't have them installed)

library(tidyverse)
library(readxl)
library(stringr)
library(igraph)

### load data
 
    ### find the VC Data file on my github: https://github.com/CarlHindsgaul/VC-Investor-Network)
    ### now download it and modify the path in the script so your downloaded file is loaded as the dataframe

data <- read_excel("C:\\Users\\carlw\\Mit drev\\2nd Year Project\\VC Data.xlsx")

### restructure data so each row represents an "edge" (connection between investor and company)

edge_list <- data %>%
  mutate(Investors = strsplit(as.character(Investors), ", ")) %>%
  unnest(Investors) %>% 
  separate(Investors, c("Investor", "InvestorCountry"), " \\(") %>% 
  mutate(InvestorCountry = gsub("\\)", "", InvestorCountry))


### restructure edge_list to an adjacency matrix, which is useful for network analysis
  
    ### first make a new dataframe with only edgelist variables (company and investor)

edge_list_excl <- edge_list %>%
  select(Investor, Company)

    ### now make an incidence matrix. We need to create an igraph object, i.e. a network-analysis object. 
    ### the iGraph object requires a list of nodes and the type of each node.

        ### we only want the unique names. In the edge_list, each company and investor (each 'vertex') can appear several times.

vertex_list <- unique(c(edge_list_excl$Company, edge_list_excl$Investor))

        ### we also want to have a information about whether each node/name is a company or an investor.

vertex_types <- ifelse(vertex_list %in% edge_list_excl$Company, TRUE, FALSE)

        ### we now create the igraph object, let us call it "g", and convert it into an incidence matrix.

g <- graph_from_data_frame(edge_list_excl, directed = FALSE, vertices = data.frame(name = vertex_list, type = vertex_types))

incidence_matrix <- as_incidence_matrix(g, sparse = FALSE)

        ### Make an adjacency matrix
        ### (First, we turn the incidence matrix into a binary, so only 1 for investment, otherwise 0. This is to prepare for later calculations that require binary format)

binary_investment_matrix <- as.matrix(ifelse(incidence_matrix > 0, 1, 0))

        ### (Second, we multiply (%*%) the binary investment matrix with its transpose (i.e. 'turned' matrix, so row 1 becomes column 1 etc.))
        ### (The result is the 'overlap' of investors since we have binary data, only 1 and 0, and matrix multiplication works by multiplying row values with column values
        ###  so when, say, investor row b has a '1' on its fourth column, representing company y, and transpore-investor a has a 1 in its fourth row, we have 1*1 = an overlap
        ###  and the way matrix multiplication works, all row & column values are 'compared' like this and summed up, thus counting overlaps)
        ### All right, so we do the calculation: multiply the matrix with its transpose (t() function)

co_investment_matrix <- binary_investment_matrix %*% t(binary_investment_matrix)

        ### But we also set the diagonal elements to 0, since we are not concerned with how connected each fund is with itself

diag(co_investment_matrix) <- 0

        ### Now we have the adjacency matrix. I will just create a separate object for it with that name: adjacency_matrix

adjacency_matrix <- co_investment_matrix


